<Window x:Class="EliminacjaGJ_CSharp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EliminacjaGJ_CSharp"
        mc:Ignorable="d"
        Title="MainWindow" 
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        Height="787" Width="1274">



    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="Black"/>

        <Style x:Key="ButtonStyleBasic" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="White"/>
        <Style x:Key="CheckBoxMyStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid>
            <!--main window division -->
            <Grid.RowDefinitions>
                <RowDefinition Height="9*"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>

            <!-- user matrix -->
            <Grid Grid.Row="0" Grid.Column="0" Margin="0,0,0,0" VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20*" />
                    <RowDefinition Height="90*" />
                </Grid.RowDefinitions>
                <!--<Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>-->


                <Grid Grid.Row="0">
                    <DockPanel HorizontalAlignment="Stretch" Margin="2,2,2,2"  LastChildFill="False" VerticalAlignment="Stretch" Background="#FF333333">
                        <Label x:Name="userMatrixLabel" Content="Liczba wymiarów:"  Width="110" Height="26" HorizontalAlignment="Left" VerticalAlignment="Center" BorderBrush="White" Foreground="White"  />
                        
                        <TextBox x:Name="userMatrixText" HorizontalAlignment="Left"  TextWrapping="Wrap" Text="" BorderBrush="White" VerticalContentAlignment="Center"  VerticalAlignment="Stretch"
                                 Width="40" MaxLength="2" MaxLines="1" Margin="10,0,10,0" ToolTip="Liczba całkowita [1,10]." Height="26" TextAlignment="Center" FontSize="16" Background="#FF333331" BorderThickness="2" Foreground="White" />
                        
                        <Button x:Name="button" Content="Wstaw"  VerticalAlignment="Stretch" Click="button_Click" Height="26" Width="75"  BorderThickness="2" Cursor="Arrow" Background="#FF333333" 
                                Foreground="White" BorderBrush="White" Margin="10,0,10,0"  Style="{DynamicResource ButtonStyleBasic}"/>
                        <GridSplitter x:Name="gridSplitter"  VerticalAlignment="Stretch" Width="1" Opacity="0.8" Margin="0,30,0,30" />

                        
                        <Button x:Name="generateRandomMatrix" Content="Losuj macierz"  VerticalAlignment="Stretch" Click="generateRandomMatrix_Click"  Height="26" Width="95" BorderThickness="2" 
                                Cursor="Arrow" Background="#FF333333" Foreground="White" BorderBrush="White" Margin="10,0,10,0" Style="{DynamicResource ButtonStyleBasic}"/>
                        <Label x:Name="randomMatrixLabel" Content="n:"  Width="20" Height="26" HorizontalAlignment="Left" VerticalAlignment="Center" HorizontalContentAlignment="Right" BorderBrush="White" Foreground="White" Margin="0"  />
                        <TextBox x:Name="randomMatrixText" HorizontalAlignment="Left"  TextWrapping="Wrap" Text="" BorderBrush="White" VerticalContentAlignment="Center"  VerticalAlignment="Stretch" Width="50" MaxLength="4" MaxLines="1" Margin="0,0,10,0" ToolTip="Liczba całkowita [1,2000]." Height="26" TextAlignment="Center" FontSize="16" Background="#FF333331" BorderThickness="2" Foreground="White"/>

                        
                        <GridSplitter x:Name="gridSplitter2"  VerticalAlignment="Stretch" Width="1" Opacity="0.8" Margin="0,30,0,30" />
                        <CheckBox x:Name="checkBox" Content="Interval mode" Height="26" VerticalAlignment="Center" Margin="15,0,15,0" VerticalContentAlignment="Center" Background="#FF333333" Foreground="White" BorderBrush="White" Checked="checkBox_Checked" Unchecked="checkBox_Unchecked" Style="{DynamicResource CheckBoxMyStyle}"/>
                    </DockPanel>
                </Grid>

                <Grid Grid.Row="1" Name="userMatrixGrid"  Margin="2,2,2,2" VerticalAlignment="Stretch" Background="#FF333333">

                </Grid>


                <DockPanel Grid.Row="1" Margin="2,2,2,2" VerticalAlignment="Bottom" HorizontalAlignment="Center">
                    <Button x:Name="clearUserMatrix" Content="Wyczyść macierz" Margin="5"  Width="114" Click="clearUserMatrix_Click" Style="{DynamicResource ButtonStyleBasic}" BorderThickness="2" Cursor="Arrow" Background="#FF333333" Foreground="White" BorderBrush="White"/>

                    <Button x:Name="userMatrixCalculateButton"  Content="Przekształć macierz" Margin="5" Width="131" Click="Gauss" Style="{DynamicResource ButtonStyleBasic}" BorderThickness="2" Cursor="Arrow" Background="#FF333333" Foreground="White" BorderBrush="White"  />


                </DockPanel>

            </Grid>








            <!-- log space -->
            <TextBox Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" x:Name="messageLog" Background="Tomato" Text="message label" HorizontalAlignment="Stretch" 
                   Margin="10,10,10,10" VerticalAlignment="Stretch" MinHeight="50" Foreground="White" FontSize="14"
                       ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True" 
                     IsReadOnly="True"
                   />
            <Button x:Name="clearMessageLog" Grid.Column="1"  Content="X"  HorizontalAlignment="Right" Margin="0,10,30,0" Grid.Row="1" 
                    VerticalAlignment="Top" Width="20" Height="20" Background="#FF333333" BorderBrush="White" Foreground="White" Click="clearMessageLog_Click"/>
            <!--HorizontalContentAlignment="Stretch" 
                   VerticalContentAlignment="Center"-->
        </Grid>


    </Grid>
</Window>
